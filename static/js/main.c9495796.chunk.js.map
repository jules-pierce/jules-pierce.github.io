{"version":3,"sources":["PlatformItem.js","Day.js","Form.js","Graphs.js","imgs/methodology.png","imgs/jules.jpg","imgs/dana.jpg","imgs/yash.jpg","imgs/eric.jpg","imgs/aarushi.jpg","About.js","FAQ.js","ShowTraj.js","ShowAdvice.js","App.js","reportWebVitals.js","index.js"],"names":["PlatformItem","props","onRemove","bind","removeFn","index","this","remove","draggableId","name","provided","snapshot","ListGroup","Item","className","classNames","isDragging","style","draggableProps","ref","innerRef","dragHandleProps","Container","fluid","Row","Col","sm","xl","Button","onClick","variant","size","React","Component","Day","state","platforms_remaining","onDragEnd","removeItem","e","platform","target","innerText","list","getTraj","concat","platforms","indexOf","splice","setState","setTraj","result","console","log","destination","new_platforms","Array","from","source","removed","remaining","Card","Header","as","day","Body","droppableId","isDraggingOver","droppableProps","map","placeholder","DropdownButton","ButtonGroup","id","title","block","p","Dropdown","DAYS","LearnForm","traj","onSubmit","res","i","length","showTraj","current","md","HOMEWORKS","PLATFORMS","TITLES","Graph","images","hws","filterImagesHw","filterImagesPlatform","filterImages","hwList","platList","image","s","split","assignment","includes","event","curr_hws","hw_prefix","checked","containsAll","hw","ind","curr_platforms","platform_suffix","Form","Check","type","label","onChange","Title","Img","src","About","CardDeck","width","Image","aarushi","roundedCircle","Text","dana","eric","jules","yash","img","FAQ","Accordion","Toggle","eventKey","Collapse","href","ShowTraj","classname","back","next","IDEAL","1","2","3","4","5","6","7","EXAMPLES","ShowAdvice","min","minVal","Infinity","example","k","v","calculateDistance","ideal","goBack","trajIndex","idealIndex","swaps","increaseIdeal","increaseTraj","inPlace","Math","App","trajectory","home","showAdvice","showForm","Navbar","bg","Brand","Nav","Link","NavDropdown","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9495796.chunk.js","sourcesContent":["import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { Draggable } from 'react-beautiful-dnd';\nimport * as classNames from 'classnames';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { X } from 'react-bootstrap-icons';\n\nexport default class PlatformItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onRemove = this.onRemove.bind(this);\n    }\n\n    onRemove(removeFn, index) {\n        this.props.remove(this.props.index);\n    }\n\n    render() {\n        return (\n            <Draggable\n                key={this.props.name}\n                draggableId={`${this.props.name}-id`}\n                index={this.props.index}>\n                {(provided, snapshot) => (\n                    <ListGroup.Item\n                        className={classNames('item', snapshot.isDragging && 'dragging')}\n                        style={provided.draggableProps.style}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                    >\n                        <Container fluid>\n                            <Row className=\"justify-content-md-center\">\n                                <Col sm={1} xl={1}></Col>\n                                <Col className=\"mt-1\">{this.props.name}</Col>\n                                <Col sm={1} xl={1}>\n                                    <Button onClick={this.onRemove} variant=\"outline-danger\" size=\"sm\">\n                                        <X />\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </ListGroup.Item>\n                )\n                }\n            </Draggable>\n        )\n    }\n}","import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport PlatformItem from './PlatformItem';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport * as classNames from 'classnames';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default class Day extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { platforms_remaining: [\"Check Piazza\", \"Watch Lecture Video\", \"Attend office hours\", \"Homework\"] }\n\n        this.onDragEnd = this.onDragEnd.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n    }\n\n    onClick(e) {\n        const platform = e.target.innerText;\n        const list = this.props.getTraj(this.props.index).concat(platform);\n        const platforms = this.state.platforms_remaining;\n        const index = platforms.indexOf(platform);\n        platforms.splice(index, 1);\n        this.setState({\n            platforms_remaining: platforms\n        });\n        this.props.setTraj(this.props.index, list);\n    }\n\n    onDragEnd(result) {\n        console.log('Drag ended');\n        if (!result.destination) {\n            return;\n        }\n\n        const new_platforms = Array.from(this.props.getTraj(this.props.index));\n        const [removed] = new_platforms.splice(result.source.index, 1);\n        new_platforms.splice(result.destination.index, 0, removed);\n\n        this.props.setTraj(this.props.index, new_platforms);\n    }\n\n    removeItem(index) {\n        console.log(\"removing \" + index);\n\n        const new_platforms = Array.from(this.props.getTraj(this.props.index));\n        const removed = new_platforms.splice(index, 1);\n        this.props.setTraj(this.props.index, new_platforms);\n\n        var remaining = this.state.platforms_remaining;\n        remaining = remaining.concat(removed);\n        this.setState({\n            platforms_remaining: remaining\n        });\n    }\n\n    render() {\n        return (\n            <Card className=\"text-center\">\n                <Card.Header as=\"h5\">{this.props.day}</Card.Header>\n                <Card.Body>\n                    <Container>\n                        <Row className=\"justify-content-md-center\">\n                            <Col>\n                                <DragDropContext onDragEnd={this.onDragEnd}>\n                                    <Droppable droppableId=\"droppable\">\n                                        {(provided, snapshot) => (\n                                            <ListGroup\n                                                ref={provided.innerRef}\n                                                className={classNames('list', snapshot.isDraggingOver && 'draggingOver')}\n                                                {...provided.droppableProps}\n                                            >\n                                                {this.props.getTraj(this.props.index).map((platform, index) => (\n                                                    <PlatformItem name={platform} index={index} remove={this.removeItem} />\n                                                ))}\n                                                {provided.placeholder}\n                                            </ListGroup>\n                                        )}\n\n                                    </Droppable>\n                                </DragDropContext>\n                            </Col>\n                        </Row>\n                        <Row className=\"justify-content-md-center\">\n                            <Col>\n                                <DropdownButton className=\"mt-4\" variant=\"outline-primary\" as={ButtonGroup} id=\"dropdown-basic-button\" title=\"Select a Platform\" block>\n                                    {this.state.platforms_remaining.map(p => (\n                                        <Dropdown.Item onClick={this.onClick}>{p}</Dropdown.Item>\n                                    ))}\n                                </DropdownButton>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Card.Body>\n            </Card>\n        )\n    }\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Day from './Day';\n\nconst DAYS = [\"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\"];\n\nexport default class LearnForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { traj: [[], [], [], [], [], [], []] };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.setTraj = this.setTraj.bind(this);\n        this.getTraj = this.getTraj.bind(this);\n    }\n\n    onSubmit() {\n        console.log(this.state.traj);\n\n        var res = [];\n\n        for (var i = 0; i < this.state.traj.length; i++) {\n            res = res.concat(this.state.traj[i]);\n        }\n\n        this.props.showTraj(res);\n    }\n\n    setTraj(day, list) {\n        var current = this.state.traj;\n        current[day] = list;\n        this.setState({ traj: current });\n    }\n\n    getTraj(day) {\n        return this.state.traj[day];\n    }\n\n    render() {\n        return (\n            <Container className=\"mt-5\">\n                <Row className=\"justify-content-md-center\">\n                    <Col>\n                        <h4>Please enter the order in which you use resources.</h4>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col>\n                        <p>\n                            A \"learning trajectory\" is the order in which you use resources to achieve your eventual goal -\n                            for most CS classes, that goal is a homework assignment or project. Learning trajectories are\n                            specific to individuals, and what works well for one person might not work well for another. However,\n                            we have identified a few learning trajectories that have appeared to be ideal, and this website will\n                            analyze your current learning trajectory and point you towards an ideal learning trajectory which you\n                            are closest to.\n                        </p>\n                        <p>\n                            On this page, start by inputting your typical process of tackling a homework. If you use a resource multiple\n                            times in a day, base the order on the first time you use that resource in a day. In the blocks below, use the\n                            drop down menus to choose which platforms to add. You can drag them around to re-arrange them if you need. When\n                            you're done, click the Submit button to see what we suggest for you!\n                        </p>\n                    </Col>\n                </Row>\n                <Row md={2} className=\"justify-content-md-center\">\n                    {DAYS.map((day, index) => (\n                        <Col className=\"mt-2\">\n                            <Day setTraj={this.setTraj} index={index} getTraj={this.getTraj} day={DAYS[index]} />\n                        </Col>\n                    ))}\n                </Row>\n                <Row>\n                    <Col className=\"mt-2\">\n                        <Button className=\"float-right\" variant=\"outline-primary\" as={ButtonGroup} onClick={this.onSubmit}>Submit</Button>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport { Card } from \"react-bootstrap\";\n\nconst HOMEWORKS = [\"hw0\", \"hw1\", \"hw2\", \"hw3\", \"hw4\", \"hw5\", \"hw6\", \"hw7\", \"hw8\", \"hw9\"];\nconst PLATFORMS = [\"codio\", \"oh\", \"canvas\", \"piazza\"];\n\nconst TITLES = {\n    \"/imgs/all-all.png\": \"Trajectories for All Assignments\",\n    \"/imgs/hw0-codio.png\": \"Codio for HW0\",\n    \"/imgs/hw0-oh.png\": \"Office Hours for HW0\",\n    \"/imgs/hw0-piazza.png\": \"Piazza for HW0\",\n    \"/imgs/hw0-all.png\": \"Trajectories for HW0\",\n    \"/imgs/hw1-codio.png\": \"Codio for HW1\",\n    \"/imgs/hw1-oh.png\": \"Office Hours for HW1\",\n    \"/imgs/hw1-canvas.png\": \"Lecture Videos for HW1\",\n    \"/imgs/hw1-piazza.png\": \"Piazza for HW1\",\n    \"/imgs/hw1-all.png\": \"Trajectories for HW1\",\n    \"/imgs/hw2-codio.png\": \"Codio for HW2\",\n    \"/imgs/hw2-oh.png\": \"Office Hours for HW2\",\n    \"/imgs/hw2-canvas.png\": \"Lecture Videos for HW2\",\n    \"/imgs/hw2-piazza.png\": \"Piazza for HW2\",\n    \"/imgs/hw2-all.png\": \"Trajectories for HW2\",\n    \"/imgs/hw3-codio.png\": \"Codio for HW3\",\n    \"/imgs/hw3-oh.png\": \"Office Hours for HW3\",\n    \"/imgs/hw3-canvas.png\": \"Lecture Videos for HW3\",\n    \"/imgs/hw3-piazza.png\": \"Piazza for HW3\",\n    \"/imgs/hw3-all.png\": \"Trajectories for HW3\",\n    \"/imgs/hw4-codio.png\": \"Codio for HW4\",\n    \"/imgs/hw4-oh.png\": \"Office Hours for HW4\",\n    \"/imgs/hw4-canvas.png\": \"Lecture Videos for HW4\",\n    \"/imgs/hw4-piazza.png\": \"Piazza for HW4\",\n    \"/imgs/hw4-all.png\": \"Trajectories for HW4\",\n    \"/imgs/hw5-codio.png\": \"Codio for HW5\",\n    \"/imgs/hw5-oh.png\": \"Office Hours for HW5\",\n    \"/imgs/hw5-canvas.png\": \"Lecture Videos for HW5\",\n    \"/imgs/hw5-piazza.png\": \"Piazza for HW5\",\n    \"/imgs/hw5-all.png\": \"Trajectories for HW5\",\n    \"/imgs/hw6-codio.png\": \"Codio for HW6\",\n    \"/imgs/hw6-oh.png\": \"Office Hours for HW6\",\n    \"/imgs/hw6-canvas.png\": \"Lecture Videos for HW6\",\n    \"/imgs/hw6-piazza.png\": \"Piazza for HW6\",\n    \"/imgs/hw6-all.png\": \"Trajectories for HW6\",\n    \"/imgs/hw7-codio.png\": \"Codio for HW7\",\n    \"/imgs/hw7-oh.png\": \"Office Hours for HW7\",\n    \"/imgs/hw7-canvas.png\": \"Lecture Videos for HW7\",\n    \"/imgs/hw7-piazza.png\": \"Piazza for HW7\",\n    \"/imgs/hw7-all.png\": \"Trajectories for HW7\",\n    \"/imgs/hw8-codio.png\": \"Codio for HW8\",\n    \"/imgs/hw8-oh.png\": \"Office Hours for HW8\",\n    \"/imgs/hw8-canvas.png\": \"Lecture Videos for HW8\",\n    \"/imgs/hw8-piazza.png\": \"Piazza for HW8\",\n    \"/imgs/hw8-all.png\": \"Trajectories for HW8\",\n    \"/imgs/hw9-codio.png\": \"Codio for HW9\",\n    \"/imgs/hw9-oh.png\": \"Office Hours for HW9\",\n    \"/imgs/hw9-canvas.png\": \"Lecture Videos for HW9\",\n    \"/imgs/hw9-piazza.png\": \"Piazza for HW9\",\n    \"/imgs/hw9-all.png\": \"Trajectories for HW9\",\n}\n\nexport default class Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { images: [], hws: [], platforms: [] };\n        this.filterImagesHw = this.filterImagesHw.bind(this);\n        this.filterImagesPlatform = this.filterImagesPlatform.bind(this);\n        this.filterImages = this.filterImages.bind(this);\n\n    }\n\n    filterImages(hwList, platList) {\n        var res = [];\n        for (var image in TITLES) {\n            var imgName = image.split(\"/\")[2];\n            var s = imgName.split(\"-\");\n            var assignment = s[0];\n            var platform = s[1].split(\".\")[0];\n\n            if (hwList.includes(assignment) && platList.includes(platform)) {\n                res = res.concat(image);\n            }\n        }\n\n        this.setState({\n            images: res\n        });\n    }\n\n    filterImagesHw(event) {\n\n        var curr_hws = this.state.hws;\n        var hw_prefix = event.target.id;\n\n\n        if (event.target.checked) {\n            curr_hws = curr_hws.concat(hw_prefix);\n            var containsAll = true;\n            for (var hw in HOMEWORKS) {\n                if (!curr_hws.includes(HOMEWORKS[hw])) {\n                    containsAll = false;\n                }\n            }\n            if (containsAll) {\n                curr_hws = curr_hws.concat(\"all\");\n            }\n        } else {\n            var ind = curr_hws.indexOf(hw_prefix);\n            curr_hws.splice(ind, 1);\n        }\n        this.filterImages(curr_hws, this.state.platforms);\n        this.setState({\n            hws: curr_hws\n        });\n    }\n\n    filterImagesPlatform(event) {\n        var curr_platforms = this.state.platforms;\n        var platform_suffix = event.target.id;\n\n        if (event.target.checked) {\n            curr_platforms = curr_platforms.concat(platform_suffix);\n            var containsAll = true;\n            for (var p in PLATFORMS) {\n                if (!curr_platforms.includes(PLATFORMS[p])) {\n                    console.log(\"does not include \" + p);\n                    containsAll = false;\n                }\n            }\n            if (containsAll) {\n                curr_platforms = curr_platforms.concat(\"all\");\n            }\n        } else {\n            var ind = curr_platforms.indexOf(platform_suffix);\n            curr_platforms.splice(ind, 1);\n        }\n\n        this.filterImages(this.state.hws, curr_platforms);\n        this.setState({\n            platforms: curr_platforms\n        });\n\n    }\n\n    render() {\n        return (\n            <Container className=\"mt-4\">\n                <Row className=\"justify-content-md-center\">\n                    <Col>\n                        <h4>Take a look at our research!</h4>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col>\n                        <p>Filter by the homework assignment and/or platform you'd like to see.</p>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n\n                    <Col>\n                        <h5>Assignment</h5>\n                        <Form>\n                            {HOMEWORKS.map((assignment, i) => (\n                                < Form.Check\n                                    type=\"checkbox\"\n                                    label={assignment}\n                                    onChange={this.filterImagesHw}\n                                    id={assignment}\n                                />\n                            ))}\n                        </Form>\n                    </Col>\n                    <Col>\n                        <h5>Platforms</h5>\n                        <Form>\n                            {PLATFORMS.map((platform, index) => (\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={platform}\n                                    onChange={this.filterImagesPlatform}\n                                    id={platform}\n                                />\n                            ))}\n                        </Form>\n                    </Col>\n                </Row>\n                <Row>\n                    {this.state.images.map((image) => (\n                        <Card className=\"mt-2\">\n                            <Card.Body>\n                                <Card.Title as=\"h3\" className=\"mt-2\">{TITLES[image]}</Card.Title>\n                            </Card.Body>\n                            <Card.Img variant=\"bottom\" src={image} />\n                        </Card>\n                    ))}\n                </Row>\n            </Container>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/methodology.527b5d65.png\";","export default __webpack_public_path__ + \"static/media/jules.684f7036.jpg\";","export default __webpack_public_path__ + \"static/media/dana.8eca60a9.jpg\";","export default __webpack_public_path__ + \"static/media/yash.67fa895e.jpg\";","export default __webpack_public_path__ + \"static/media/eric.86949b40.jpg\";","export default __webpack_public_path__ + \"static/media/aarushi.c1a2e8f8.jpg\";","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport img from \"./imgs/methodology.png\";\nimport Card from 'react-bootstrap/Card';\nimport jules from './imgs/jules.jpg';\nimport dana from './imgs/dana.jpg';\nimport yash from './imgs/yash.jpg';\nimport eric from './imgs/eric.jpg';\nimport aarushi from './imgs/aarushi.jpg';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nexport default class About extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Container className=\"mt-4\">\n                <h4 id=\"team\">The Team</h4>\n                <CardDeck className=\"mb-4\">\n                    <Card style={{ width: '18rem' }}>\n                        <Image src={aarushi} roundedCircle className=\"m-2\" />\n                        <Card.Body>\n                            <Card.Title>Aarushi Pendharkar</Card.Title>\n                            <Card.Text>\n                                Aarushi is a student at the University of Pennsylvania,\n                                studying Systems Science and Engineering, Mathematics, and Statistics.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <Card style={{ width: '18rem' }}>\n                        <Image src={dana} roundedCircle className=\"m-2\" />\n                        <Card.Body>\n                            <Card.Title>Dana Yi</Card.Title>\n                            <Card.Text>\n                                Dana is a student at the University of Pennsylvania, studying\n                                Computer Engineering.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <Card style={{ width: '18rem' }}>\n                        <Image src={eric} roundedCircle className=\"m-2\" />\n                        <Card.Body>\n                            <Card.Title>Eric Fouh</Card.Title>\n                            <Card.Text>\n                                Eric is an Assistant Professor of practice at the University of Pennsylvania.\n                        </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <Card style={{ width: '18rem' }}>\n                        <Image src={jules} roundedCircle className=\"m-2\" />\n                        <Card.Body>\n                            <Card.Title>Jules Pierce</Card.Title>\n                            <Card.Text>\n                                Jules is a student at the University of Pennsylvania, studying Computer Science.\n                        </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <Card style={{ width: '18rem' }}>\n                        <Image src={yash} roundedCircle className=\"m-2\" />\n                        <Card.Body>\n                            <Card.Title>Yash Killa</Card.Title>\n                            <Card.Text>\n                                Yash is a student at University of Pennsylvania, studying Computer Science and\n                                Engineering Entrepreneurship.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n                <h4 id=\"study\">\n                    The Study - Learning How To Learn: Identification and categorization\n                    of the learning trajectories of students in an introductory programming\n                    course\n                </h4>\n                <p>\n                    Through this website, we present the results of a study aiming to analyze\n                    students’ learning habits and map them to their performance in an introductory\n                    computer science course. Specifically, we have identified common patterns of\n                    behavior both in each individual resource as well as across these resources.\n                    These resources are Piazza (for Q&A and interactions between students\n                    and the teaching staff), Office Hours (for help with concepts and assignments),\n                    Panopto recorded videos (for further content beyond lectures), and Codio (for\n                    lecture notes and programming class assignments). Using the unique opportunity\n                    of an online semester with data that normally is not available in an in-person\n                    classroom, we have collected students’ dis-identified learning data and analyzed\n                    it to create a model for success in an introductory computer science course.\n                </p>\n                <h4 id=\"background\">Background</h4>\n                <p>\n                    Computer science, and generally STEM fields, are encouraged as fields of study in\n                    college for a well-rounded skill set, post-graduate opportunities, and analytic thinking\n                    (Shell & Soh, 2013). However, there are many challenges associated with introductory\n                    computer science courses such as lack of prior experience, breadth of skills and concepts\n                    covered, and cognitive mastery (Falkner et al., 2014). As such, there has been an interest\n                    in the types of behaviors students exhibit when learning computer science, both as a major\n                    and as supplemental coursework to another major. Many institutions report a drop rate in\n                    the computer science major of 30 to 40%: a statistic that is becoming prevalent among many\n                    computer science programs (Beaubouef & Mason, 2005). One major factor identified as\n                    contributing to this issue is a lack of feedback provided to students on their progress\n                    (Beaubouef & Mason, 2005). Therefore, it is vital that students are able to not only get\n                    adequate feedback on their performance but also understand how they can best utilize\n                    available resources and learn in a way that maximizes their understanding and mastery\n                    of core computer science concepts.\n                </p>\n                <p>References:</p>\n                <ul>\n                    <li>\n                        Beaubouef, T., & Mason, J. (2005). Why the high attrition rate for computer science\n                        students. ACM SIGCSE Bulletin,37(2), 103-106. doi:10.1145/1083431.1083474\n                    </li>\n                    <li>\n                        Falkner, K., Vivian, R., & Falkner, N. J. (2014). Identifying computer science\n                        self-regulated learning strategies. Proceedings of the 2014 Conference on Innovation\n                        & Technology in Computer Science Education - ITiCSE '14. doi:10.1145/2591708.2591715\n                    </li>\n                    <li>\n                        Shell, D. F., & Soh, L. (2013). Profiles of motivated self-regulation in college\n                        computer science courses: Differences in major versus required non-major courses.\n                        Journal of Science Education and Technology, 22(6), 899-913.\n                        doi:10.1007/s10956-013-9437-9\n                    </li>\n                </ul>\n                <h4 id=\"design\"> Methodology and Design</h4>\n                <Image src={img} fluid />\n                <p>\n                    The virtual format of the class, resulting from the COVID-19 pandemic, provided us with a unique\n                    opportunity to collect and have access to data across multiple learning platforms. We were able to\n                    track students’ engagement across the various resources and platforms provided to them. To identify\n                    common patterns and map learning trajectories, we developed an algorithm to analyze patterns of learning.\n                    Using this algorithm, we were able to determine a set of optimal learning trajectories that can be adapted\n                    and suggested to students based on their self-inputted data.\n                </p>\n                <p>Algorithm Description:</p>\n                <ul>\n                    <li>\n                        Give a data point to each of the four platforms (Piazza, OHQ, Canvas, Codio) for each of the times\n                        that they occurred.\n                    </li>\n                    <li>\n                        Only look at data points of the hw if they happened within the timeframe of that specific homework. For\n                        example, if a student looks at a piazza post for hw0 while doing hw5, we don’t want that “piazza” point\n                        to show up in the hw5 data.\n                    </li>\n                    <li>\n                        To clump together more similar learning trajectories, we “lumped” data points of the same platform within\n                        the same day as one point.\n                    </li>\n                    <li>\n                        For example, “piazza, piazza, piazza, codio” is now “piazza, codio” if all three piazza engagements were\n                        on the same day.\n                    </li>\n                    <li>\n                        This allows us to have fewer overall trajectories so we can see more of a trend, but have enough unique\n                        trajectories that some patterns tend to form (ex. A lot of students check piazza after watching lecture\n                        notes/starting assignment/going to OHQ and tend to check piazza daily until the assignment is due).\n                    </li>\n                </ul>\n                <h4 id=\"next\">Next Steps</h4>\n                <p>\n                    For the past three semesters (Spring 2020, Fall 2021, and Spring 2021), the university implemented a policy, in\n                    which students could choose to take any course (major requirement elective, etc.) for pass/fail grading. This was\n                    implemented to help alleviate the stress and pressures that have been magnified throughout the COVID-19 pandemic.\n                    Since, under the university policy, data on which students are taking courses under pass/fail grading is not provided\n                    to professors and teaching assistants, we do not have access to whether or not a student is taking the introductory\n                    computer science course in question for pass/fail grading. Therefore, we were not able to study the effects of pass/fail\n                    grading on student performance as a covariate. After the pandemic ends, it would be interesting to compare learning\n                    trajectories of normal grading versus learning trajectories of pass/fail grading if we are able to get this retroactive\n                    information.\n                </p>\n                <p>\n                    Furthemore, given that we had access to a fairly small sample of data (only the Fall 2021 semester was completely online\n                    at the time we began data collection), the learning trajectories we found through our analysis would likely become more robust,\n                    in both accuracy and representation of the student population, with much more data. Thus, with more semesters of data, we would\n                    like to conduct big data analytics to pinpoint the optimal learning trajectories in a large sample set.\n                </p>\n                <p>\n                    Disclaimer: Our goal here was to analyze data and provide optimal learning trajectories based on the data we have. This is in no\n                    way all-inclusive or a definitive solution to getting a better grade. We hope that researchers continue our work and refine our\n                    methods to develop algorithms based on much more data than we had access to, as this is an important project to us, and we sincerely\n                    believe in its benefit to students.\n                </p>\n            </Container>\n        )\n    }\n}","import React from \"react\";\nimport { Accordion, Card, Button, Image } from \"react-bootstrap\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default class FAQ extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Accordion>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                            I’m feeling really overwhelmed. I don’t know how to use all the\n                            resources or what I should do to maximize my learning and time.\n                            What should I do first?\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body>\n                            It’s absolutely normal to feel overwhelmed by CIS homeworks and concepts in the beginning.\n                            You have access to many resources, and we will help you figure out what a step in the\n                            right direction could look like. Please use the <a href=\"/\">‘Optimize my Learning’</a> page\n                            to find what that step would look like. Using past data, we have also identified learning\n                            trajectories (order of using resources) that have worked well in the past for students who\n                            were once in the same place as you are in now. For tons of details on how students have used\n                            the available resources, and what has worked in the past, please visit the <a href=\"/graphs\">\n                                Graphs </a>page on this website.\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                            How do I start/go about finishing a homework assignment?\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body>\n                            Based on our analysis of optimal resource utilization, we have found that there are a few learning\n                            trajectories that have led to better student success. Of course, nothing is a sure proof of success,\n                            but the following graph shows us which trajectories tend to lead to a higher average grade. The\n                            graph shows the trajectories by increasing grade (left to right) for a given homework.\n                            <Image src=\"/imgs/all-trajectories.png\" fluid />\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                            Is it true that the earlier I start homework the better?\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"2\">\n                        <Card.Body>\n                            Yes and No?! Our data has shown that students who start earlier tend to get better grades.\n                            This could be because of better availability of resources like OHQ or just more time to debug\n                            your code. However there have been instances where people who started the assignment 5 days\n                            before the due date have done better than those who started 6 days before the due date. So maybe\n                            take a day’s break after submitting your previous homework before starting the next one.\n                            <Container fluid>\n                                <Row>\n                                    <Col>\n                                        <Image src=\"/imgs/hw3-codio.png\" fluid />\n                                    </Col>\n                                    <Col>\n                                        <Image src=\"/imgs/hw7-codio.png\" fluid />\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\n                            How much should I engage with Piazza?\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"3\">\n                        <Card.Body>\n                            Piazza is one of the most important resources available to you - it has been found to be really\n                            helpful in getting a high grade for a homework assignment. You should actively use Piazza to\n                            ask questions and search for answers when you’re stuck. Piazza could also help you pre-determine\n                            and overcome some common speed bumps during the course of the homework assignment. However,\n                            there should be a limit to how much time you are spending on Piazza. Our data shows that those\n                            (few) students who spend too much time on Piazza and engage with upwards of 300 or 350 posts per\n                            homework tend to start losing out on actual problem solving and coding time and thus receive a\n                            lower average grade - a textbook example of the law of diminishing returns.\n                            <Image src=\"/imgs/hw3-piazza.png\" fluid />\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\">\n                            Is it good to watch the lecture videos before starting homework?\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"4\">\n                        <Card.Body>\n                            Yes absolutely! Reviewing course content and lecture videos before starting the homework has\n                            definitely proven to have a positive effect on students’ average grades across the board.\n                            It never hurts to get a fresh understanding on topics like arrays, recursion, and objects that\n                            are closely tied to homework assignments.\n                            <Image src=\"/imgs/hw4-trajectories.png\" fluid />\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"5\">\n                            When should I start watching/revising course content through videos before starting the homework?\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"5\">\n                        <Card.Body>\n                            It’s good to go over course content through watching posted lecture videos before starting a\n                            homework assignment. This way, the concepts relevant to the homework will not be totally foreign\n                            to you as you begin working through the assignment. It’s also beneficial to reinforce concepts\n                            by watching the videos as you see fit while working on the assignment; having a background\n                            understanding before starting and then reviewing specific concepts as you work through the\n                            assignment will help you to really understand both the material and its applications during your\n                            homework assignment. Here’s a graph showing student performance based on how many days before\n                            starting an assignment they watched the videos. As shown, many time points correspond with a good\n                            grade; from our analysis, the best times to watch videos are before starting a homework and\n                            towards the end, but it’s important to review course concepts whenever you feel a doubt coming on\n                            or you just want to get a deeper understanding of the material.\n                            <Image src=\"/imgs/hw4-canvas.png\" fluid />\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"6\">\n                            When should I go to Office Hours?\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"6\">\n                        <Card.Body>\n                            Of course everyone should visit Office Hours when they’ve been trying but haven’t been able to\n                            solve a part of the homework assignment - whether it be for concept clarification or debugging.\n                            However, we found something really interesting - students who went to OH before starting to code\n                            had a higher average grade than other students. Such students would discuss high level concepts\n                            and strategies related to the homework assignment with the TA, and that generally tended to help\n                            them and give them clarity towards completing the homework and thoroughly understanding the\n                            concepts.\n                            <Image src=\"/imgs/hw7-trajectories.png\" fluid />\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        )\n    }\n}","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\n\nexport default class ShowTraj extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Container className=\"mt-5\">\n                <Row classname=\"justify-content-md-center\">\n                    <Col>\n                        <Card className=\"text-center\">\n                            <Card.Header as=\"h4\">Here is your current learning trajectory</Card.Header>\n                            <Card.Body>\n                                <Container fluid>\n                                    <Row className=\"justify-content-md-center\">\n                                        <Col>\n                                            <p>\n                                                We've condensed your learning trajectory down to one list of items, following the order you input them on\n                                                the last page. Click Next to see our recommendation for you!\n                                            </p>\n                                            <ListGroup className=\"pb-2\">\n                                                {this.props.traj.map((p, i) => (\n                                                    <ListGroup.Item>{p}</ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Button className=\"float-left\" variant=\"outline-primary\" onClick={this.props.back}>Back</Button>\n                                        </Col>\n                                        <Col>\n                                            <Button className=\"float-right\" variant=\"outline-primary\" onClick={this.props.next}>Next</Button>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\n\nconst IDEAL = {\n    1: [\"Co\", 'Co', 'O', 'P', 'P'],\n    2: ['Co', 'P', 'P', 'P', 'P', 'P', 'P'],\n    3: ['Ca', 'Co', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n    4: ['Co', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n    5: ['Ca', 'Co', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n    6: ['Co', 'O', 'P', 'P', 'P', 'P', 'P', 'P'],\n    7: ['Ca', 'Co', 'O', 'P', 'P', 'P', 'P', 'P', 'P'],\n};\n\nconst EXAMPLES = {\n    1: \"An example implementation for this learning trajectory is to start out by trying the homework on Saturday, \\\n    take a break and try the homework again on Monday, and then attend office hours on Monday to get help, and after \\\n    office hours look on Piazza a little bit for a new problem you encounter. Then on Tuesday, maybe you're wondering \\\n    something so you come back and look at Piazza a little more.\",\n    2: \"An example implementation for this learning trajectory is to start out by trying the homework on Saturday \\\n    and looking at Piazza for guidance, and then keeping an eye on Piazza over the next 5 days to see if anything important \\\n    is announced.\",\n    3: \"An example implementation for this learning trajectory is to start out by watching the lecture videos on Saturday, \\\n    then start the homework on Sunday and look at Piazza for guidance, and then keeping an eye on Piazza over the next 6 days \\\n    to see if anything important is announced.\",\n    4: \"An example implementation of this learning trajectory is to start out by attempting the homework on Monday, and go to \\\n    Office Hours and read Piazza to get some help starting it out. Then keep an eye on Piazza over the next 6 days to see if anything\\\n    important is announced.\",\n    5: \"An example implementation of this learning trajectory is to start out by watching lecture videos on Sunday, then begin the \\\n    homework on Monday and go to office hours and read piazza for help, and then keep an eye on Piazza over the next few days for \\\n    any important announcements.\",\n    6: \"An example implementation of this learning trajectory is to start trying the homework on Sunday, but get stuck and head to \\\n    office hours on Monday for help. On Monday you might also look up some of your questions on piazza, and then keep an eye on Piazza \\\n    over the next few days for any important announcements.\",\n    7: \"An example implementation of this learning trajectory is to start out by watching lecture videos on Saturday, then start the homework\\\n    on Sunday, but maybe you get stuck and go to office hours on Monday. On Monday you can also take a look at Piazza to answer some of \\\n    your questions and then keep an eye on Piazza over the next few days for any important announcements.\"\n}\n\nexport default class ShowAdvice extends React.Component {\n    constructor(props) {\n        super(props);\n\n        var res = [];\n        const platforms = this.props.traj;\n        for (var i = 0; i < platforms.length; i++) {\n            if (platforms[i] == \"Check Piazza\") {\n                res = res.concat(\"P\");\n            } else if (platforms[i] == \"Watch Lecture Video\") {\n                res = res.concat(\"Ca\");\n            } else if (platforms[i] == \"Attend office hours\") {\n                res = res.concat(\"O\");\n            } else if (platforms[i] == \"Homework\") {\n                res = res.concat(\"Co\");\n            }\n        }\n\n        var min = [];\n        var minVal = Infinity;\n        var example = \"\";\n\n        for (let k in IDEAL) {\n            var v = this.calculateDistance(res, IDEAL[k], 0, 0, 0);\n            if (v < minVal) {\n                minVal = v;\n                min = IDEAL[k];\n                example = EXAMPLES[k];\n            }\n        }\n\n        var ideal = [];\n        for (var i = 0; i < min.length; i++) {\n            if (min[i] == \"P\") {\n                ideal = ideal.concat(\"Check Piazza\");\n            } else if (min[i] == \"Ca\") {\n                ideal = ideal.concat(\"Watch Lecture Video\");\n            } else if (min[i] == \"O\") {\n                ideal = ideal.concat(\"Attend office hours\");\n            } else if (min[i] == \"Co\") {\n                ideal = ideal.concat(\"Homework\");\n            }\n        }\n\n\n        this.state = {\n            ideal: ideal,\n            example: example\n        };\n\n        this.goBack = this.goBack.bind(this);\n    }\n\n    calculateDistance(traj, ideal, trajIndex, idealIndex, swaps) {\n        if (trajIndex >= traj.length && idealIndex >= ideal.length) {\n            return swaps;\n        }\n        if (trajIndex >= traj.length) {\n            return this.calculateDistance(traj, ideal, trajIndex, idealIndex + 1, swaps + 1);\n        } else if (idealIndex >= ideal.length) {\n            return this.calculateDistance(traj, ideal, trajIndex + 1, idealIndex, swaps + 1);\n        } else if (traj[trajIndex] == ideal[idealIndex]) {\n            return this.calculateDistance(traj, ideal, trajIndex + 1, idealIndex + 1, swaps);\n        }\n\n        var increaseIdeal = this.calculateDistance(traj, ideal, trajIndex, idealIndex + 1, swaps + 1);\n        var increaseTraj = this.calculateDistance(traj, ideal, trajIndex + 1, idealIndex, swaps + 1);\n        var inPlace = this.calculateDistance(traj, ideal, trajIndex + 1, idealIndex + 1, swaps + 1);\n\n        return Math.min(increaseIdeal, increaseTraj, inPlace);\n    }\n\n    goBack() {\n        this.props.back(this.props.traj);\n    }\n\n    render() {\n        return (\n            <Container className=\"mt-5\">\n                <Row className=\"justify-content-md-center\">\n                    <Col>\n                        <Card className=\"text-center\">\n                            <Card.Header as=\"h5\">Here is our advice!</Card.Header>\n                            <Card.Body>\n                                <Container fluid>\n                                    <Row className=\"justify-content-md-center\">\n                                        <Col>\n                                            <p>\n                                                Here is the closest ideal trajectory we found for you! The order given below is an absolute ordering -\n                                                if you choose to try it, feel free to break it up into days as you see fit. Click the button at the bottom\n                                                if you'd like to see more of our research!\n                                            </p>\n                                            <p className=\"text-muted\">\n                                                Note: if a platform occurs twice, that means the ideal trajectory would do that thing twice, on\n                                                different days.\n                                            </p>\n                                            {<ListGroup className=\"pb-2\">\n                                                {this.state.ideal.map((p, i) => (\n                                                    <ListGroup.Item>{p}</ListGroup.Item>\n                                                ))}\n                                            </ListGroup>}\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"justify-content-md-center\">\n                                        <Col>\n                                            <p>{this.state.example}</p>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Button className=\"float-left\" variant=\"outline-primary\" onClick={this.goBack}>Back</Button>\n                                        </Col>\n                                        <Col>\n                                            <Button className=\"float-right\" variant=\"outline-primary\" href=\"/#/graphs\">How will changing my trajectory help me?</Button>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","import React from 'react';\nimport LearnForm from './Form';\nimport Graph from './Graphs';\nimport About from './About';\nimport FAQ from './FAQ';\nimport ShowTraj from './ShowTraj';\nimport ShowAdvice from './ShowAdvice';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { JournalCode } from 'react-bootstrap-icons';\nimport { Nav } from 'react-bootstrap';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { trajectory: [], home: <div /> }\n\n    this.showTraj = this.showTraj.bind(this);\n    this.showAdvice = this.showAdvice.bind(this);\n    this.showForm = this.showForm.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      home: <LearnForm showTraj={this.showTraj} />\n    });\n  }\n\n  showForm() {\n    this.setState({\n      home: <LearnForm showTraj={this.showTraj} />\n    });\n  }\n\n  showTraj(traj) {\n    this.setState({\n      trajectory: traj,\n      home: <ShowTraj traj={traj} next={this.showAdvice} back={this.showForm} />\n    });\n  }\n\n  showAdvice() {\n    this.setState({\n      home: <ShowAdvice traj={this.state.trajectory} back={this.showTraj} />\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>\n            <JournalCode /> {' '}\n             Improve your Study Skills!\n           </Navbar.Brand>\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/\">Optimize my Learning</Nav.Link>\n              <Nav.Link href=\"/#/graphs\">Graphs</Nav.Link>\n              <Nav.Link href=\"/#/faq\">FAQ</Nav.Link>\n              <NavDropdown title=\"About Us\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"/#/about#team\">The Team</NavDropdown.Item>\n                <NavDropdown.Item href=\"/#/about#study\">The Study</NavDropdown.Item>\n                <NavDropdown.Item href=\"/#/about#background\">Background</NavDropdown.Item>\n                <NavDropdown.Item href=\"/#/about#design\">Methodology and Design</NavDropdown.Item>\n                <NavDropdown.Item href=\"/#/about#next\">Next Steps</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Router>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => this.state.home}\n            />\n            <Route\n              exact\n              path=\"/graphs\"\n              render={() => <Graph />}\n            />\n            <Route\n              exact\n              path=\"/about\"\n              render={() => <About />}\n            />\n            <Route\n              exact\n              path=\"/faq\"\n              render={() => <FAQ />}\n            />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}